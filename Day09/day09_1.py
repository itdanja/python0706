
# 객체지향언어가 인기가 많은이유
    # 산업혁명 발전하면서 컴퓨터 용도 증가
        # 자동화[AI] , 대량생산  목적
    # 세상에 존재하는 사물 =======> 컴퓨터 세상으로

# 클래스 : 변수,함수들이 모인 틀  [ 설계도 ]
    # 클래스 선언 : Class 클래스명 :
    # def __init__(self , 변수1 , 변수2 , 변수3 , 변수4 ~~ ) :
        # init : 현재 클래스 기반으로 객체 선언시에 객체에 포함되는 변수들

# 객체 : 클래스기반으로 메모리 할당 [ 설계도 기반으로 만들어진 형태 ]
    # 객체이름[임의] = 클래스명( 인수1, 인수2 , 인수3 , 인수4 )
                    # init에서 선언된 변수의 개수와 동일하게 인수 넣기
    # . : 접근연산자 : 클래스내 변수나 메소드에 접근할때

# 학생클래스[ 학생 설계하기 ]
class 학생 :
    def __init__( self , 이름 , 국어 , 수학 , 영어 , 과학 ):
        self.이름 = 이름
        self.국어 = 국어
        self.수학 = 수학
        self.영어 = 영어
        self.과학 = 과학
    def 학생정보(self): # 함수
        print( self.이름 , self.국어 , self.수학 , self.영어 , self.과학 )

# 객체[object] 만들기
객체 = 학생("유재석" , 90 , 80 , 70 , 60 )
print( " 객체명 : " , 객체 )
print( " 객체내 변수에 접근 : " , 객체.이름 )
print( " 객체내 변수에 접근 : " , 객체.국어 )
print( " 객체내 변수에 접근 : " , 객체.수학 )
print( " 객체내 변수에 접근 : " , 객체.영어 )
print( " 객체내 변수에 접근 : " , 객체.과학 )
print( " 객체내 함수에 접근 ")
객체.학생정보()

객체2 = 학생("강호동" , 100 , 70 , 60 , 90 )
print( " 객체2내 변수에 접근 : " , 객체2.이름 )
print( " 객체2내 함수에 접근 ")
객체2.학생정보()



